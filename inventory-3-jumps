[server]
server.example.com

[server:vars]
ansible_user=vagrant
ansible_ssh_private_key_file=~/.ssh/vagrant_rsa

[network]
switch.example.com

[network:vars]
ansible_host=127.0.0.1
ansible_user=root
ansible_password=root
ansible_port=3080

# Option #1 - Default network_cli uses only `paramiko` connection type
ansible_connection=network_cli
ansible_network_os=ios

# Option #2 - The libssh connection type is only available in ansible collection `netcommon`
# More information found here https://github.com/ansible/pylibssh
#ansible_network_cli_ssh_type=libssh
#ansible_connection=ansible.netcommon.network_cli
#ansible_network_os=cisco.ios.ios

[all:vars]
ansible_python_interpreter=python3

# Define variables for multiple jump hosts 
jh_private_key = ~/.ssh/vagrant_rsa

# Command line formatting
#ansible_ssh_common_args= -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -i {{ lookup('env', 'JH3_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}" {{ jh3_ssh_user }}@{{ jh3_ip }}'

ansible_ssh_common_args= -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -i {{ lookup('env', 'JH3_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}" {{ jh3_ssh_user }}@{{ jh3_ip }}'

# Ansible Tower formatting
#ansible_ssh_common_args: -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -i {{ lookup('env', 'JH3_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -m hmac-sha1 {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}" {{jh3_ssh_user }}@{{ jh3_ip }}'

jh1_ip = jh1.example.com
jh1_ssh_port = 22
jh1_ssh_user = vagrant

jh2_ip = jh2.example.com
jh2_ssh_port = 22
jh2_ssh_user = vagrant

jh3_ip = jh3.example.com
jh3_ssh_port = 22
jh3_ssh_user = vagrant
