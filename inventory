[server]
server.example.com

[server:vars]
ansible_user=vagrant
ansible_ssh_private_key_file=~/.ssh/vagrant_rsa

[network:children]
network_paramiko
network_libssh

[network:vars]
ansible_user=root
ansible_password=root
ansible_port=3080
ansible_host=127.0.0.1

[network_libssh]
switch_libssh

[network_libssh:vars]
ansible_network_os=cisco.ios.ios
ansible_network_cli_ssh_type=libssh
ansible_connection=ansible.netcommon.network_cli

[network_paramiko]
switch_paramiko

[network_paramiko:vars]
ansible_network_os=ios
ansible_connection=network_cli

[network_rest_api]
# Ensure connectivity by using `ansible -i inventory rest_api_server -m ping -vvvv`
rest_api_server ansible_host=jh2.example.com

[network_rest_api:vars]
ansible_port = 22
ansible_user = vagrant
ansible_ssh_private_key_file = {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }}
ansible_ssh_common_args = -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}"

[f5]
lb.mydomain.com f5_provider_port=22023 f5_provider_user=admin f5_provider_password=secret f5_provider_validate=no

[all:vars]
ansible_python_interpreter=python3

# Define variables for jump hosts 
jh1_ip = jh1.example.com
jh1_ssh_port = 22
jh1_ssh_user = vagrant
jh2_ip = jh2.example.com
jh2_ssh_port = 22
jh2_ssh_user = vagrant
jh3_ip = jh3.example.com
jh3_ssh_port = 22
jh3_ssh_user = vagrant

# Triple Jump - Command line formatting
#ansible_ssh_common_args= -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -i {{ lookup('env', 'JH3_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}" {{ jh3_ssh_user }}@{{ jh3_ip }}'
# Triple Jump - Ansible Tower formatting
#ansible_ssh_common_args: -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -i {{ lookup('env', 'JH3_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W {{ jh3_ip }}:{{ jh3_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=\"ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -m hmac-sha1 {{ jh1_ssh_user }}@{{ jh1_ip }}\" {{ jh2_ssh_user }}@{{ jh2_ip }}" {{jh3_ssh_user }}@{{ jh3_ip }}'

# Single Jump - Commandline formatting
#ansible_ssh_common_args= -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand="ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W %h:%p -q {{ jh1_ssh_user }}@{{ jh1_ip }}"
# Single Jump - Ansible Tower formatting
#ansible_ssh_common_args: -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W %h:%p -q {{ jh1_ssh_user }}@{{ jh1_ip }}'


# Double Jump - Command line formatting
#ansible_ssh_common_args= -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}" {{ jh2_ssh_user }}@{{ jh2_ip }}'
# Double Jump - Ansible Tower formatting
#ansible_ssh_common_args: -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -o ProxyCommand='ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i {{ lookup('env', 'JH2_SSH_PRIVATE_KEY') }} -W %h:%p -oProxyCommand="ssh -i {{ lookup('env', 'JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} {{ jh1_ssh_user }}@{{ jh1_ip }}" {{ jh2_ssh_user }}@{{ jh2_ip }}'